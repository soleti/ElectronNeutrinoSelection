

process_name : PandoraLEEAnalyzer      #The process name must NOT contain any underscores

source : {
  module_type : RootInput
  maxEvents   : -1
}

services :
{
  scheduler:                { defaultExceptions: false }    # Make all uncaught exceptions fatal.
  TFileService:             { fileName: "PandoraLEEAnalyzer.root" }
  TimeTracker:              {}
  RandomNumberGenerator:    {}
  @table::microboone_services_reco
  @table::microboone_simulation_services
  #BackTracker:             @local::microboone_backtracker
  TPCEnergyCalibService:         @local::microboone_tpcenergycalib_service
}

outputs: {
  optionalout: {
    module_type: RootOutput
    fileName: "output_file.root"
    dataTier: "reconstructed"
    fastCloning: false
  }
}
services.DetectorClocksService.InheritClockConfig:         false
services.DetectorClocksService.TriggerOffsetTPC:           -0.400e3
services.ChannelStatusService.ChannelStatusProvider.UseDB: false
services.message.destinations :
{
  STDCOUT:
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "WARNING"   #tells the message service that this destination applies to WARNING and higher level messages
     append:     true       #says to append all messages to the output
     categories:
     {
       ChannelFilter:
       {
         limit: 0
         reportEvery: 0
       }
       default:
       {
         limit: -1  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}
